#!/usr/bin/env bash
##check for and install Hunchly

red=`tput setaf 1`
reset=`tput sgr0`
printf "Welcome to the Case Management integration with Hunchly\n"
timestamp=$(date +%Y-%m-%d:%H:%M)
closecase=$(date +%Y%m%d%H%M)

source /opt/csitools/sharedfunctions
	
Menu() {

	opencasetype=$(yad --question --width 350 --height 100 --title "Opening a Case" \
	    --text="   Welcome to the CSI Case Management System Hunchly Integration." \
	    --button="Start New Case:3" \
	    --button="Open an Existing CSI Linux Case:2" \
	    --button="Cancel:1" \
	    --on-top \
	    --center \
	)	
	
	case $? in
	 	3) #yes
			thecase=$(zenity --forms --title="Starting a new case" --text="Enter the Case Information" \
				--add-entry="Enter the Case Name" \
				--add-entry="Investigator Name" \
				--add-entry="Case Type (OSINT/SOCMINT/Dark Web/Digital Forensic Investigation..." \
				--add-entry="Enter the client name for the report:" \
				--add-entry="Enter the client address:" \
				--add-entry="Enter the client city:" \
				--add-entry="Enter the client state:" \
				--add-entry="Enter the client zip:" \
				--add-entry="Enter the client phone number:" \
				--add-entry="Enter the suspect name in the case:")
			cases=$(echo $thecase | cut -f1 -d"|")
			investigator=$(echo $thecase | cut -f2 -d"|")
			casetype=$(echo $thecase | cut -f3 -d"|")
			client=$(echo $thecase | cut -f4 -d"|")
			clientaddy=$(echo $thecase | cut -f5 -d"|")
			clientcity=$(echo $thecase | cut -f6 -d"|")
			clientstate=$(echo $thecase | cut -f7 -d"|")
			clientzip=$(echo $thecase | cut -f8 -d"|")
			clientphone=$(echo $thecase | cut -f9 -d"|")
			suspect=$(echo $thecase | cut -f9 -10"|")
			
			printf "investigator='$investigator'\ncasetype='$casetype'\nclient='$client'\nclientaddy='$clientaddy'\nclientcity='$clientcity'\nclientstate='$clientstate'\nclientzip='$clientzip'\nclientphone='$clientphone'\nsuspect='$suspect'\ncases='$cases'\n" | tee /tmp/caseinfo.txt
			StartCase $cases | tee >(zenity --progress --pulsate --no-cancel --auto-close --text="Please wait...")
			key=$(zenity --password --title "Enter you SUDO password to setup Hunchly." --text "Enter you SUDO password." --width 400)
			mkdir ~/Cases/$cases/Tools/HunchlyData
			echo "data_directory=/home/csi/Cases/$cases/Tools/HunchlyData" | tee ~/Cases/$cases/Tools/HunchlyData/hunchly.ini
			echo $key | sudo -S mv -f ~/Cases/$cases/Tools/HunchlyData/hunchly.ini /usr/lib/hunchly/hunchly.ini 
			cp ${HOME}/Documents/HunchlyData/hunchlylicense.hlic /home/csi/Cases/$cases/Tools/HunchlyData 
			/usr/lib/hunchly/HunchlyAPI init
			/usr/lib/hunchly/HunchlyAPI case add $cases
			sleep 2
			/usr/lib/hunchly/Hunchly
			sleep 10
			/usr/lib/hunchly/HunchlyAPI case add $cases
			;;
		2) #Open Case
		
			folder=$(zenity --width=400 --file-selection --title="Choose the folder in Cases folder for the case you want to use:" --filename=$HOME/Cases/ --directory)
			case $? in
				0) cases=$(basename $folder);;
				1) 
					zenity --error --width=200 --text "No case entered, exiting" 2> >(grep -v 'GtkDialog' >&2)
					exit;;
				-1) 	  	
					zenity --error --width=200 --text "No case entered, exiting" 2> >(grep -v 'GtkDialog' >&2)
					exit;;
			esac
			StartCase $cases | tee >(zenity --progress --pulsate --no-cancel --auto-close --text="Please wait...")
			key=$(zenity --password --title "Enter you SUDO password to setup Hunchly." --text "Enter you SUDO password." --width 400)
			mkdir ~/Cases/$cases/Tools/HunchlyData
			echo "data_directory=/home/csi/Cases/$cases/Tools/HunchlyData" | tee ~/Cases/$cases/Tools/HunchlyData/hunchly.ini
			echo $key | sudo -S mv -f ~/Cases/$cases/Tools/HunchlyData/hunchly.ini /usr/lib/hunchly/hunchly.ini 
			cp ${HOME}/Documents/HunchlyData/hunchlylicense.hlic /home/csi/Cases/$cases/Tools/HunchlyData 
			/usr/lib/hunchly/HunchlyAPI init
			/usr/lib/hunchly/HunchlyAPI case add $cases
			sleep 2
			/usr/lib/hunchly/Hunchly
			sleep 10
			/usr/lib/hunchly/HunchlyAPI case add $cases
			;;
		*) #Oops
			echo "You did not pick either option. exiting"
			exit
			;;
		-1) #Oops
			echo "You did not pick either option. exiting"
			exit
			;;
	esac

	echo "finished"
}


export -f StartCase _stopwatch _Check-Case 


Menu




